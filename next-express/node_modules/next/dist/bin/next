#!/usr/bin/env node
'use strict';

var _from = require('babel-runtime/core-js/array/from');

var _from2 = _interopRequireDefault(_from);

var _set = require('babel-runtime/core-js/set');

var _set2 = _interopRequireDefault(_set);

var _path = require('path');

var _crossSpawn = require('cross-spawn');

var _fs = require('fs');

var _package = require('../../package.json');

var _package2 = _interopRequireDefault(_package);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var defaultCommand = 'dev';
var commands = new _set2.default(['init', 'build', 'start', defaultCommand]);

var cmd = process.argv[2];
var args = void 0;

if (new _set2.default(['--version', '-v']).has(cmd)) {
  console.log('next.js v' + _package2.default.version);
  process.exit(0);
}

if (new _set2.default(['--help', '-h']).has(cmd)) {
  console.log('\n    Usage\n      $ next <command>\n\n    Available commands\n      ' + (0, _from2.default)(commands).join(', ') + '\n\n    For more information run a command with the --help flag\n      $ next init --help\n  ');
  process.exit(0);
}

if (commands.has(cmd)) {
  args = process.argv.slice(3);
} else {
  cmd = defaultCommand;
  args = process.argv.slice(2);
}

var bin = (0, _path.join)(__dirname, 'next-' + cmd);

var startProcess = function startProcess() {
  var proc = (0, _crossSpawn.spawn)(bin, args, { stdio: 'inherit', customFds: [0, 1, 2] });
  proc.on('close', function (code, signal) {
    if (code !== null) {
      process.exit(code);
    }
    if (signal) {
      if (signal === 'SIGKILL') {
        process.exit(137);
      }
      console.log('got signal ' + signal + ', exitting');
      process.exit(1);
    }
    process.exit(0);
  });
  proc.on('error', function (err) {
    console.error(err);
    process.exit(1);
  });
  return proc;
};

var proc = startProcess();

if (cmd === 'dev') {
  (0, _fs.watchFile)((0, _path.join)(process.cwd(), 'next.config.js'), function (cur, prev) {
    if (cur.size > 0 || prev.size > 0) {
      console.log('\n> Found a change in next.config.js, restarting the server...');
      // Don't listen to 'close' now since otherwise parent gets killed by listener
      proc.removeAllListeners('close');
      proc.kill();
      proc = startProcess();
    }
  });
}