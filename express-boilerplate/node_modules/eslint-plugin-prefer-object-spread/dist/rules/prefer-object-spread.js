'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.default = preferObjectSpreadRule;
function preferObjectSpreadRule(context) {
	var cloneOnly = context.options[0] !== 'always';

	return {
		'CallExpression': function CallExpression(node) {
			var callee = node.callee;
			var args = node.arguments;


			var isObjectAssign = callee.type === 'MemberExpression' && callee.object.name === 'Object' && callee.property.name === 'assign';

			var isCloneOperation = args.length && args[0].type === 'ObjectExpression';

			// Object spread can't be used when passing a spread element to Object.assign()
			// E.g., Object.assign(...a)
			var hasSpreadElement = args.length && args.some(function (x) {
				return x.type === 'SpreadElement';
			});

			if (isObjectAssign && !hasSpreadElement && (isCloneOperation || !cloneOnly)) {
				context.report(node, 'Use a spread property instead of Object.assign().');
			}
		}
	};
}